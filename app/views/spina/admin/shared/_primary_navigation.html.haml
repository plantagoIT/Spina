%nav#primary.transformed{data: {turbolinks_permanent: true}}
  %ul
    %li{class: ('active' if (%w[pages photos attachments navigations resources] + Spina::Plugin.all.map { |plugin| plugin.namespace if current_theme.plugins.include?(plugin.name) }).include? controller_name)}
      = radio_button_tag 'spina_primary_nav', 'home', checked: true
      = label :spina_primary_nav, 'home', title: t('spina.website.title') do
        = icon('home')

      %ul
        %li{class: ('active' if (current_admin_path.start_with?('/pages') || current_admin_path.start_with?('/navigations')) && @page&.resource.blank?)}
          = link_to t('spina.website.pages').upcase, spina.admin_pages_path
        %li{class: ('active' if current_admin_path.start_with?('/images', '/attachments'))}
          = link_to t('spina.website.media_library').upcase, spina.admin_images_path

        - Spina::Plugin.all.each do |plugin|
          - if current_theme.plugins.include? plugin.name
            - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_website_secondary_navigation"
              = render "spina/admin/hooks/#{ plugin.namespace }/website_secondary_navigation", plugin: plugin

        - Spina::Resource.order(:label).each do |resource|
          %li{class: ('active' if (@resource || @page&.resource) == resource)}= link_to resource.label.upcase, spina.admin_resource_path(resource)

    - Spina::Plugin.all.each do |plugin|
      - if current_theme.plugins.include? plugin.name
        - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_primary_navigation"
          = render "spina/admin/hooks/#{ plugin.namespace }/primary_navigation", plugin: plugin

    %li{class: ('active' if %w[accounts users tenants].include? controller_name)}
      = radio_button_tag 'spina_primary_nav', 'preferences'
      = label :spina_primary_nav, 'preferences', title: t('spina.preferences.title') do
        = icon('cog')

      %ul
        %li{class: ('active' if params[:action] == 'edit' && params[:controller] == 'spina/admin/accounts')}
          = link_to t('spina.preferences.account').upcase, spina.edit_admin_account_path
        - if current_spina_user.admin?
          %li{class: ('active' if %w[users].include? controller_name)}
            = link_to t('spina.preferences.users').upcase, spina.admin_users_path
        - else
          %li{class: ('active' if %w[users].include? controller_name)}
            = link_to t('spina.preferences.profile').upcase, spina.edit_admin_user_path(@current_spina_user)
        
        - if Spina.config.show_social_media
          %li{class: ('active' if params[:action] == 'social')}
            = link_to t('spina.preferences.social_media').upcase, spina.social_admin_account_path

        - if Spina.config.show_analytics and current_spina_user.admin?
          %li{class: ('active' if params[:action] == 'analytics')}
            = link_to t('spina.preferences.analytics').upcase, spina.analytics_admin_account_path

        - Spina::Plugin.all.each do |plugin|
          - if current_theme.plugins.include? plugin.name
            - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_settings_secondary_navigation"
              = render "spina/admin/hooks/#{ plugin.namespace }/settings_secondary_navigation", plugin: plugin
          - if plugin.settings.present?
            %li{class: ('active' if controller_name == 'settings' and params[:plugin] == plugin.namespace)}
              = link_to t("spina.#{plugin.namespace}.title").upcase, spina.admin_edit_settings_path(plugin.namespace)

    %li
      = radio_button_tag 'spina_primary_nav', 'hide'
      = label :spina_primary_nav, 'hide', title: t('spina.hide.title') do
        = icon 'chevron-left', id: :spina_primary_nav_icon

    %li.bottom
      = link_to spina.admin_logout_path, title: t('spina.logout'), data: {turbolinks: false} do
        = icon('power-off')
